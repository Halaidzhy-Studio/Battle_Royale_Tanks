<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="751px" height="991px" version="1.1" content="&lt;mxfile userAgent=&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36&quot; version=&quot;8.5.12&quot; editor=&quot;www.draw.io&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;cd09b92b-5253-73b1-b7c2-79cb3dc525f5&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=&quot;0e5989f0-69d3-45fb-872e-2a705df500ac&quot; name=&quot;Страница 2&quot;&gt;7VfbjtowEP2aPLaKk3DZxyXstpVYqV1W6uVtSExi4dipYwrs13ecOAQIbLIq6hMoIGZ8Zjz2nDlSHD/Mtp8U5OmTjCl3PLdIIZYbx586nufiF11LyePKQSpHBjo9QuSQ0HkEnB7BFhCtEiXXwkY32O8srjOMvVHj/0xZkmqbhAzvzIr/4PihklJX/7JtSLkplMWHJTxeWCV1ckWF7hOwGI+jAAC8KPDjD7bmP8DX9mwvIFaVs9C7+sDFhmUcBFqTpRR6bldctKOU8XgGO7k22xca76S2JqlU7BXxwHGJoAOXlZ6zVxPsDU02xnkouVToELLcoAmam2R2G0ULDPtaH5OcuJ5gewScQaHrAiXnkBdsUZZsAjNQCRMTqbXMLKg+4ONBPY7nL8sPrttrokrT7cWLJ/t2IueozKhWO4TUAXeWTLvKHllz03CFBNaXHvJkYJ1QVI5kn7ppM/6xne7Tdb/VdcebVGhkj3+Pv7/XTOixg03yfOKWN2AQaX6MIMMWJML7oOpHT9zPTpze5bSrLI2kfZYaNJOiC5usxR76Fk5A1uz7ba4VE8kR6GRGkBm6pLiSK3rC6TM0B84SLGDK6dKEGWoxVJh769YyN8lyiHDbWYmZBo3n2fLDuCTGLnmpaSmLYyrMFJgTwmI/pbnEM5b8GUzwQUaF7seBM8DCQ7RJY+Nj4EqHUuBZgJXspjhPG2pmqt8onFGZ9mDYQTB32msQvODag0Dc1iRM1pxTfVPA/6CAXtBXAt2rSyAhFzRwUfa/W74qXA/5Qmn60qmrVbY+EnZTnb6qUw33P8vO6PqqE7S498u056Y519cc/1Rz/HG77aNzmkOurznDC5pjpvFF5t2iY4HdqqPMQaq77s56AO7OjCShLyyj6k3kTaV6q1TwbpU6R9fx+1UKzea1s1w7eFH2H/4C&lt;/diagram&gt;&lt;diagram id=&quot;678cb1ec-3fa6-bcba-cf1f-a7a3d1d15a83&quot; name=&quot;Страница 3&quot;&gt;7Vpdb6M4FP01eVlpIowxkMdJMt15mJEqtdJ+vDnBDdYYHIEzTebXrx3bAey0zWYodKqpVAl/Xa7PPZx7DZnARbH/s8Lb/CvPCJuEQZ3jjD9O4HIShoH8l10PnGW6A+iOAou8M2OLN+RujRnpTFvh9bdNxXelWd3M/Ytm1kIaJk3/Z0I3uTBGQDxTI/DTBC4qzoW+KvYLwpSjNGu7cPPEKLDGK1KKSxbAFQjTVRyDIIhiSMAHpC18x2xntnePy2+6sxYHu+dcFExegQmcmwWkEmT/pBfgtDcZAMILIqqDnGIWIJTqJQfdjgOD9GODHACmL2+hBme6D9e6vTmZbvYsL8y2L4Qg9iCY7xgjYmgQ0GxEEBIPhH95SQaGIAHpiBDMPAi87ZMy+1hVRwHJKC54md3ntJRgyIEbyiw0snVHf6g1YSSbLdDInoq/5XVgrv9R11N0XCP9V0NgGgSnDj0eyf2ajltSUblVUhkjRwEimWlph0m26UpVzXfVmjyvABdErR2V2ESlIgwL+r17v3NhMeZuOZV3OTEgmnUZkM6cyGrXzaq2sLmGoqD7NCWOIYGrDRGeIRlOfGhN26oJ9eUOx67gvjTf+NWQVHvQUPYE+HUsto/Lq9K4y7reSX0NjeNRaZw4NHbZ99o07oU54agC+PNKloxKAVfJ0l9MyRKYvjEl82vTBaMytEsssMfM+pEWDMuSBc4feCnuzIji0jqnLPuCD3ynWFELWbjb1jznFf0h52NLUDlcCUveWFmTtF5wxpU4lfx4g2bRnTJmUzGp5bJbyz7gdH3F+87EL7gW1kHOGN7WdHV0WS0sZIxpOedC8MJMshu8afkzCeHD8a+feix0QxyZELSfl8ioQrsei5OnH5er6zHgF2Q6/r9jP0DsozQZMfahX8V8JjiTFcKwJxIUAB+FwU4k1v/RjyTdyg09nZ89pF9I2TbOOqc9KwSDZHEUOfEHDrsvzuLxC4ZesZCzLGkLp1SsSirNmQfot3j+vGzE3ZINoTOqMZx2wl5UI+iljh9AQ2yd8KyGaAwG0ZBTfrCZNAmu05DQOQmgmWOop5OAdx+z54v9SpFD2J5PApJ8YzL6OQ5fdGr934xGb4vRyD2RXkloRybjaBg+OyfVN8Bn/2RradEQWmYj4bx1U+kPr07p2eAgZ6P5BC1lD94JXmt6qwWY0Y18BJaMPChTKsXRNWYfTbfgW5Uet3hNy829aiw/RD2dJpJ4iroqOJtN/dNkeKaUDh1W9JMU/a887w3y1GF9DEeE2/+e9M7gRtA5L4/Mb/9lyTsHPAHJmIBD/w0FmE6hX5j82qCDl7/UR4NB7r8OkZD/8c4RP/OzANgP4rLZ/PJE1zXNb2Xgp/8A&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-4-31-352-134-0"><rect x="4" y="31" width="352" height="134"/></clipPath><clipPath id="mx-clip-4-185-352-220-0"><rect x="4" y="185" width="352" height="220"/></clipPath><clipPath id="mx-clip-4-478-392-164-0"><rect x="4" y="478" width="392" height="164"/></clipPath><clipPath id="mx-clip-4-650-392-342-0"><rect x="4" y="650" width="392" height="342"/></clipPath></defs><g transform="translate(0.5,0.5)"><rect x="0" y="0" width="360" height="400" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 0 26 L 0 0 L 360 0 L 360 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="178.67" y="17.5">Client</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-31-352-134-0)" font-size="12px"><text x="5.5" y="43.5">- receivingSocket : QUdpSocket *</text><text x="5.5" y="57.5">- sendingSocket : QUdpSocket *</text><text x="5.5" y="71.5">- clientHost : QHostAddress</text><text x="5.5" y="85.5">- serverHost : QHostAddress</text><text x="5.5" y="99.5">- clientReceivingPort : quint16</text><text x="5.5" y="113.5">- clientSendingPort : quint16</text><text x="5.5" y="127.5">- serverReceivingPort : quint16</text><text x="5.5" y="141.5">- serverSendingPort : quint16</text><text x="5.5" y="155.5">- header : Header </text></g><path d="M 0 170 L 360 170" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-185-352-220-0)" font-size="12px"><text x="5.5" y="197.5">+ Client (QString cAddr, QString sAddr, </text><text x="5.5" y="211.5">              quint16 crPort, quint16 csPort,</text><text x="5.5" y="225.5">              quint16 srPort, quint16 ssPort,</text><text x="5.5" y="239.5">              ClientData * clientData,</text><text x="5.5" y="253.5">              QObject * parent = nullptr)</text><text x="5.5" y="281.5">+ ~Client()</text><text x="5.5" y="295.5">+ getHeader() const : Header</text><text x="5.5" y="309.5">+ setHeader(const Header&amp; header) : void</text><text x="5.5" y="323.5">+ sendData(const QByteArray&amp; data) : void</text><text x="5.5" y="337.5">+ receiveData() : QByteArray</text><text x="5.5" y="351.5">+ hasDatagram() const : bool </text><text x="5.5" y="365.5">+ newReceivedDatagram() : void</text><text x="5.5" y="379.5">- checkDatagram() const : bool</text></g><rect x="0" y="447" width="400" height="540" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 0 473 L 0 447 L 400 447 L 400 473 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="198.67" y="464.5">ClientData</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-478-392-164-0)" font-size="12px"><text x="5.5" y="490.5">- gameId : const quint32</text><text x="5.5" y="504.5">- roomId : quint32</text><text x="5.5" y="518.5">- userId : quint8</text><text x="5.5" y="532.5">- roomSize : quint8</text><text x="5.5" y="546.5">- userName : QString</text><text x="5.5" y="560.5">- tankType : quint8</text><text x="5.5" y="574.5">- tanks : Tank[MAX_PLAYERS]</text><text x="5.5" y="588.5">- bullets : QMap&lt;quint8, Bullet&gt;</text><text x="5.5" y="602.5">- zone : Zone</text><text x="5.5" y="616.5">- alives : QBitArray</text></g><path d="M 0 641 L 400 641" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-650-392-342-0)" font-size="12px"><text x="5.5" y="662.5">ClientData(quint32 gameId, QString userName)</text><text x="5.5" y="690.5">// методы, которыми пользуется Controller</text><text x="5.5" y="704.5">+ getGameId() const : quint32</text><text x="5.5" y="718.5">+ getRoomId() const: quint32</text><text x="5.5" y="732.5">+ setDataFromNetwork(const QByteArray&amp; data, quint8 message) : void</text><text x="5.5" y="746.5">+ createDataForNetwork(quint8 message) const : QByteArray</text><text x="5.5" y="760.5">+ clear() : void</text><text x="5.5" y="788.5">// методы, которыми пользуется Влад</text><text x="5.5" y="802.5">+ getTankById(quint8 id) const : Tank</text><text x="5.5" y="816.5">+ getBulletsById(quint8 id) const: QList&lt;Bullet&gt;</text><text x="5.5" y="830.5">+ setTankType(const quint8 value) : void</text><text x="5.5" y="844.5">+ setMyTank(const Tank&amp; tank) : void</text><text x="5.5" y="858.5">+ setMyBullets(const QList&lt;Bullet&gt;&amp; bullets) : void</text><text x="5.5" y="872.5">+ getRoomSize() const : quint8</text><text x="5.5" y="886.5">+ getZone() const : Zone</text><text x="5.5" y="900.5">+ getAlives() const : QBitArray</text><text x="5.5" y="928.5">// общий метод</text><text x="5.5" y="942.5">+ getUserId() const : quint8</text></g><rect x="400" y="3" width="350" height="324" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(399.5,2.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="348" height="322" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 349px; height: 323px; overflow: hidden; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><b>Controller</b></p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">- timer : QTimer</p><p style="margin: 0px ; margin-left: 4px">- client : Client *</p><p style="margin: 0px ; margin-left: 4px">- clientData : ClientData *</p><hr size="1" /><p style="margin: 0px ; margin-left: 4px">+ Controller()</p><p style="margin: 0px ; margin-left: 4px">+ ~Controller()</p><p style="margin: 0px ; margin-left: 4px">+ createClient(QString cAddr, QString sAddr, quint16 crPort,</p><p style="margin: 0px ; margin-left: 4px">                        quint16 csPort, quint16 srPort, quint16 ssPort)</p><p style="margin: 0px ; margin-left: 4px">   : void</p><p style="margin: 0px ; margin-left: 4px"><br /></p><p style="margin: 0px ; margin-left: 4px">+ init() : void</p><p style="margin: 0px ; margin-left: 4px">+ play() : void</p><p style="margin: 0px ; margin-left: 4px">+ terminate() : void</p><p style="margin: 0px ; margin-left: 4px">+ startGame() : void</p><p style="margin: 0px ; margin-left: 4px">+ stopGame(): void</p><p style="margin: 0px ; margin-left: 4px">+ handleNewReceivedDatagram() : void</p><p style="margin: 0px ; margin-left: 4px">+ update() : void</p><p style="margin: 0px ; margin-left: 4px"><br /></p><p style="margin: 0px ; margin-left: 4px">- joinData(const QByteArray&amp; data, const Header&amp; header)</p><p style="margin: 0px ; margin-left: 4px">  : QByteArray</p><p style="margin: 0px ; margin-left: 4px"><br /></p></div></foreignObject><text x="174" y="167" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g></g></svg>